/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package laboratorio.pkg6;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author ferna
 */
public class FrameGestor extends javax.swing.JFrame {
    DefaultListModel modelo = new DefaultListModel();
      List<Curso> cursos = new ArrayList<Curso>();   
    /**
     * Creates new form FrameGestor
     */
    public FrameGestor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_buscar = new javax.swing.JTextField();
        lbl_profesores = new javax.swing.JLabel();
        lbl_estudiantes = new javax.swing.JLabel();
        lbl_agregar = new javax.swing.JLabel();
        lbl_eliminar = new javax.swing.JLabel();
        lbl_buscar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscarActionPerformed(evt);
            }
        });

        lbl_profesores.setText("Profesores");
        lbl_profesores.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbl_profesores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_profesoresMouseClicked(evt);
            }
        });

        lbl_estudiantes.setText("Estudiantes");
        lbl_estudiantes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbl_estudiantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_estudiantesMouseClicked(evt);
            }
        });

        lbl_agregar.setText("Agregar");
        lbl_agregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbl_agregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_agregarMouseClicked(evt);
            }
        });

        lbl_eliminar.setText("Eliminar");
        lbl_eliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbl_eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_eliminarMouseClicked(evt);
            }
        });

        lbl_buscar.setText("Buscar");
        lbl_buscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbl_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_buscarMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_profesores)
                        .addGap(30, 30, 30)
                        .addComponent(lbl_estudiantes)
                        .addGap(40, 40, 40)
                        .addComponent(lbl_agregar)
                        .addGap(36, 36, 36)
                        .addComponent(lbl_eliminar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_buscar)
                                .addGap(33, 33, 33)
                                .addComponent(lbl_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE))
                        .addGap(74, 74, 74))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_buscar)
                    .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_profesores)
                    .addComponent(lbl_estudiantes)
                    .addComponent(lbl_agregar)
                    .addComponent(lbl_eliminar))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_buscarMouseClicked
        // TODO add your handling code here:
          String criterioBusqueda = txt_buscar.getText().toLowerCase(); // Obtén el criterio de búsqueda en minúsculas
    
    DefaultListModel nuevoModelo = new DefaultListModel(); // Crea un nuevo modelo de lista
    
    for (Curso curso : cursos) {
        // Convierte el nombre y apellido del estudiante a minúsculas para que la búsqueda no sea sensible a mayúsculas/minúsculas
        String nombreCompleto = curso.getNombre().toLowerCase() + " " + curso.getCodigo().toLowerCase();
        
        // Compara el nombre completo del estudiante con el criterio de búsqueda
        if (nombreCompleto.contains(criterioBusqueda)) { 
            // Si coincide, agrega el estudiante al nuevo modelo de lista
            
            nuevoModelo.addElement(curso.getTexto());
        }
    }
    
    // Actualiza el JList con el nuevo modelo de lista que contiene los resultados de la búsqueda
    jList1.setModel(nuevoModelo);
        
        
    }//GEN-LAST:event_lbl_buscarMouseClicked

    private void txt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscarActionPerformed

    private void lbl_profesoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_profesoresMouseClicked
        // TODO add your handling code here:
        llamarPantallaEdicion();
    }//GEN-LAST:event_lbl_profesoresMouseClicked

    private void lbl_agregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_agregarMouseClicked
        // TODO add your handling code here:
        llamarPantallaEdicionC();
    }//GEN-LAST:event_lbl_agregarMouseClicked

    private void lbl_estudiantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_estudiantesMouseClicked
        // TODO add your handling code here:
        llamarPantallaEdicionE();
    }//GEN-LAST:event_lbl_estudiantesMouseClicked

    private void lbl_eliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_eliminarMouseClicked
        // TODO add your handling code here:
            int selectedIndex = jList1.getSelectedIndex();
    if (selectedIndex != -1) {
        // Obtén el estudiante seleccionado
        Curso curso = cursos.get(selectedIndex);

        // Elimina el estudiante tanto del modelo como de la lista de estudiantes
        modelo.remove(selectedIndex);
        cursos.remove(selectedIndex);

        // Actualiza el modelo del JList
        jList1.setModel(modelo);

    }    
    }//GEN-LAST:event_lbl_eliminarMouseClicked

    private void llamarPantallaEdicion(){
    
    FrameProfesores profesores = new FrameProfesores(this);
    profesores.setLocationRelativeTo(null);
    profesores.setVisible(true);
    this.setVisible(false);
    
    }
    
    
    private void llamarPantallaEdicion(Profesores profesores){
    
    FrameProfesores PantallaEstudiante = new FrameProfesores(this,profesores );
    PantallaEstudiante.setLocationRelativeTo(null);
    PantallaEstudiante.setVisible(true);
    this.setVisible(false);
    
    }
    private void llamarPantallaEdicionC(){
    
    FrameNcurso Ncurso = new FrameNcurso(this);
    Ncurso.setLocationRelativeTo(null);
    Ncurso.setVisible(true);
    this.setVisible(false);
    
    }
    
    
    private void llamarPantallaEdicionC(Curso curso){
    
    FrameNcurso PantallaEstudiante = new FrameNcurso(this,curso);
    PantallaEstudiante.setLocationRelativeTo(null);
    PantallaEstudiante.setVisible(true);
    this.setVisible(false);
    
    }
    
      private void llamarPantallaEdicionE(){
    
    FrameEstudiantes Estudiantes = new FrameEstudiantes(this);
    Estudiantes.setLocationRelativeTo(null);
    Estudiantes.setVisible(true);
    this.setVisible(false);
    
    }
    
    
    private void llamarPantallaEdicionE(Estudiantes estudiantes){
    
    FrameEstudiantes PantallaEstudiante = new FrameEstudiantes(this,estudiantes);
    PantallaEstudiante.setLocationRelativeTo(null);
    PantallaEstudiante.setVisible(true);
    this.setVisible(false);
    
    }
    
    
    public void agregarCurso(Curso curso){//va a recibir un estudiante
         /*A mi lista de estudiante (le agrego el estudiante)
         una vez que lo agregue a mi modelo , falta agregarlo al list view*/
         cursos.add(curso);           
        modelo.addElement(curso.getTexto());//Get texto me devuelve el apellido y nombre
        jList1.setModel(modelo);
     } 
    
    
    
    
    
    
    
public void actualizarCurso(Curso curso) {
    // Encuentra el índice del estudiante en la lista y actualiza su información.
    int index = cursos.indexOf(curso);
    if (index != -1) {
        cursos.set(index, curso);
        modelo.set(index, curso.getTexto());
    }
}
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameGestor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameGestor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameGestor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameGestor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameGestor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_agregar;
    private javax.swing.JLabel lbl_buscar;
    private javax.swing.JLabel lbl_eliminar;
    private javax.swing.JLabel lbl_estudiantes;
    private javax.swing.JLabel lbl_profesores;
    private javax.swing.JTextField txt_buscar;
    // End of variables declaration//GEN-END:variables
}
